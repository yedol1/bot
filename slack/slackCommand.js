const { app } = require("../config");
const { addSolutionTeamMeetingToDatabase, addSolDeveloperMeetingToDatabase, addSolAIDeveloperMeetingToDatabase, addSolPlannerMeetingToDatabase } = require("../notion/notionAPI");

function setupSlackCommands() {
  app.command("/add-solution-meeting", async ({ ack, body, client }) => {
    await ack();

    const channelID = body.channel_id;
    try {
      const notionData = await addSolutionTeamMeetingToDatabase();
      if (notionData) {
        const messageText = `*[ üìÇ ÏÜîÎ£®ÏÖòÌåÄ ÌöåÏùòÎ°ùÏù¥ ÏÉùÏÑ±ÎêòÏóàÏäµÎãàÎã§. ]*\n\n\n*üìé ÎßÅÌÅ¨*: ${notionData?.url}\n\n*‚ö†Ô∏è ÎßÅÌÅ¨Ïóê Ï†ëÍ∑ºÌïòÏó¨, ÌéòÏù¥ÏßÄÏóê Îì§Ïñ¥Í∞ÑÌõÑ [ÎØ∏ÌåÖ ÌÖúÌîåÎ¶ø]ÏùÑ ÌÅ¥Î¶≠ÌïòÏó¨Ï£ºÏÑ∏Ïöî.`;
        await client.chat.postMessage({
          channel: channelID,
          text: messageText,
        });
      }
    } catch (error) {
      console.error("Notion Îç∞Ïù¥ÌÑ∞ Ï∂îÍ∞Ä Ïã§Ìå®:", error);
    }
  });
  app.command("/add-s-developer-meeting", async ({ ack, body, client }) => {
    await ack();

    const channelID = body.channel_id;
    try {
      const notionData = await addSolDeveloperMeetingToDatabase();
      if (notionData) {
        const messageText = `*[ üìÇ ÏÜîÎ£®ÏÖòÌåÄ Ïõπ Í∞úÎ∞úÌååÌä∏ ÌöåÏùòÎ°ùÏù¥ ÏÉùÏÑ±ÎêòÏóàÏäµÎãàÎã§. ]*\n\n\n*üìé ÎßÅÌÅ¨*: ${notionData?.url}\n\n*‚ö†Ô∏è ÎßÅÌÅ¨Ïóê Ï†ëÍ∑ºÌïòÏó¨, ÌéòÏù¥ÏßÄÏóê Îì§Ïñ¥Í∞ÑÌõÑ [ÎØ∏ÌåÖ ÌÖúÌîåÎ¶ø]ÏùÑ ÌÅ¥Î¶≠ÌïòÏó¨Ï£ºÏÑ∏Ïöî.`;
        await client.chat.postMessage({
          channel: channelID,
          text: messageText,
        });
      }
    } catch (error) {
      console.error("Notion Îç∞Ïù¥ÌÑ∞ Ï∂îÍ∞Ä Ïã§Ìå®:", error);
    }
  });
  app.command("/add-s-ai-developer-meeting", async ({ ack, body, client }) => {
    await ack();

    const channelID = body.channel_id;
    try {
      const notionData = await addSolAIDeveloperMeetingToDatabase();
      if (notionData) {
        const messageText = `*[ üìÇ ÏÜîÎ£®ÏÖòÌåÄ AI Í∞úÎ∞úÌååÌä∏ ÌöåÏùòÎ°ùÏù¥ ÏÉùÏÑ±ÎêòÏóàÏäµÎãàÎã§. ]*\n\n\n*üìé ÎßÅÌÅ¨*: ${notionData?.url}\n\n*‚ö†Ô∏è ÎßÅÌÅ¨Ïóê Ï†ëÍ∑ºÌïòÏó¨, ÌéòÏù¥ÏßÄÏóê Îì§Ïñ¥Í∞ÑÌõÑ [ÎØ∏ÌåÖ ÌÖúÌîåÎ¶ø]ÏùÑ ÌÅ¥Î¶≠ÌïòÏó¨Ï£ºÏÑ∏Ïöî.`;
        await client.chat.postMessage({
          channel: channelID,
          text: messageText,
        });
      }
    } catch (error) {
      console.error("Notion Îç∞Ïù¥ÌÑ∞ Ï∂îÍ∞Ä Ïã§Ìå®:", error);
    }
  });
  app.command("/add-s-planner-meeting", async ({ ack, body, client }) => {
    await ack();

    const channelID = body.channel_id;
    try {
      const notionData = await addSolPlannerMeetingToDatabase();
      if (notionData) {
        const messageText = `*[ üìÇ ÏÜîÎ£®ÏÖòÌåÄ Í∏∞ÌöçÌååÌä∏ ÌöåÏùòÎ°ùÏù¥ ÏÉùÏÑ±ÎêòÏóàÏäµÎãàÎã§. ]*\n\n\n*üìé ÎßÅÌÅ¨*: ${notionData?.url}\n\n*‚ö†Ô∏è ÎßÅÌÅ¨Ïóê Ï†ëÍ∑ºÌïòÏó¨, ÌéòÏù¥ÏßÄÏóê Îì§Ïñ¥Í∞ÑÌõÑ [ÎØ∏ÌåÖ ÌÖúÌîåÎ¶ø]ÏùÑ ÌÅ¥Î¶≠ÌïòÏó¨Ï£ºÏÑ∏Ïöî.`;
        await client.chat.postMessage({
          channel: channelID,
          text: messageText,
        });
      }
    } catch (error) {
      console.error("Notion Îç∞Ïù¥ÌÑ∞ Ï∂îÍ∞Ä Ïã§Ìå®:", error);
    }
  });
  app.command("/list", async ({ ack, body, client, payload }) => {
    await ack();
    try {
      const res = await client.views.open({
        trigger_id: payload.trigger_id,
        view: {
          type: "modal",
          callback_id: "uploadBoardList",
          private_metadata: body.channel_id,
          close: {
            type: "plain_text",
            text: "Cancel",
          },
          title: {
            type: "plain_text",
            text: "Status board",
          },
          blocks: [
            {
              type: "context",
              elements: [
                {
                  type: "plain_text",
                  text: "Status board",
                  emoji: true,
                },
              ],
            },
            {
              type: "input",
              block_id: "board_title",
              element: {
                type: "plain_text_input",
                action_id: "board_title-action",
              },
              label: {
                type: "plain_text",
                text: "ÏùòÎÖºÌï† Ï£ºÏ†ú",
                emoji: true,
              },
            },
            {
              type: "section",
              block_id: "priority_select",
              text: {
                type: "mrkdwn",
                text: "Ïö∞ÏÑ†ÏàúÏúÑ",
              },
              accessory: {
                type: "static_select",
                placeholder: {
                  type: "plain_text",
                  text: "ÏÑ†ÌÉùÌïòÍ∏∞",
                  emoji: true,
                },
                options: [
                  {
                    text: {
                      type: "plain_text",
                      text: "1ÏàúÏúÑ",
                      emoji: true,
                    },
                    value: "1ÏàúÏúÑ",
                  },
                  {
                    text: {
                      type: "plain_text",
                      text: "2ÏàúÏúÑ",
                      emoji: true,
                    },
                    value: "2ÏàúÏúÑ",
                  },
                  {
                    text: {
                      type: "plain_text",
                      text: "3ÏàúÏúÑ",
                      emoji: true,
                    },
                    value: "3ÏàúÏúÑ",
                  },
                  {
                    text: {
                      type: "plain_text",
                      text: "Í∑∏Ïô∏",
                      emoji: true,
                    },
                    value: "Í∑∏Ïô∏",
                  },
                ],
                action_id: "priority_select-action",
              },
            },
            // Ï∞∏ÏÑùÏûê Îã§Ï§ëÏÑ†ÌÉù
            {
              type: "section",
              block_id: "attendees_select",
              text: {
                type: "mrkdwn",
                text: "Ï∞∏ÏÑùÏûê",
              },
              accessory: {
                type: "multi_users_select",
                placeholder: {
                  type: "plain_text",
                  text: "ÏÑ†ÌÉùÌïòÍ∏∞",
                  emoji: true,
                },
                action_id: "attendees_select-action",
              },
            },
          ],
          submit: {
            type: "plain_text",
            text: "Submit",
          },
        },
      });
      console.log("Modal opened:", res);
    } catch (error) {
      console.error("Ïä¨Îûô Ï∞Ω Ïó¥Í∏∞ Ïã§Ìå®:", error);
    }
  });
  app.command("/qa-add", async ({ body, ack, client }) => {
    // Acknowledge the action
    await ack();
    try {
      const res = await client.views.open({
        trigger_id: body.trigger_id,
        view: {
          type: "modal",
          callback_id: "uploadBlog",
          private_metadata: body.channel_id,
          close: {
            type: "plain_text",
            text: "Cancel",
          },
          title: {
            type: "plain_text",
            text: "QA Î¶¨Ìè¨Ìä∏ ÏûëÏÑ±",
          },
          blocks: [
            {
              type: "context",
              elements: [
                {
                  type: "plain_text",
                  text: "Î¶¨Ìè¨Ìä∏ ÏûëÏÑ±",
                  emoji: true,
                },
              ],
            },
            {
              dispatch_action: true,
              type: "input",
              block_id: "report_text_input",
              element: {
                type: "plain_text_input",
                dispatch_action_config: {
                  trigger_actions_on: ["on_character_entered"],
                },
                action_id: "report_text_input-action",
              },
              label: {
                type: "plain_text",
                text: "Í∏∞Îä•ÏòÅÏó≠",
                emoji: true,
              },
            },
            {
              dispatch_action: true,
              type: "input",
              block_id: "header_text_input",
              element: {
                type: "plain_text_input",
                dispatch_action_config: {
                  trigger_actions_on: ["on_character_entered"],
                },
                action_id: "header_text_input-action",
              },
              label: {
                type: "plain_text",
                text: "Î¨∏Ï†úÏöîÏïΩ",
                emoji: true,
              },
            },
            {
              type: "section",
              block_id: "author_select",
              text: {
                type: "mrkdwn",
                text: "Î≤ÑÍ∑∏ Î¶¨Ìè¨Ìä∏ ÏûëÏÑ±Ïûê",
              },
              accessory: {
                type: "static_select",
                placeholder: {
                  type: "plain_text",
                  text: "ÏÑ†ÌÉùÌïòÍ∏∞",
                  emoji: true,
                },
                options: [
                  {
                    text: {
                      type: "plain_text",
                      text: "Î∞ïÍ≤ΩÌò∏",
                      emoji: true,
                    },
                    value: "Î∞ïÍ≤ΩÌò∏",
                  },
                  {
                    text: {
                      type: "plain_text",
                      text: "Ïù¥Í¥ëÎ†¨",
                      emoji: true,
                    },
                    value: "Ïù¥Í¥ëÎ†¨",
                  },
                  {
                    text: {
                      type: "plain_text",
                      text: "Í∞ïÏù∏Ìï¥",
                      emoji: true,
                    },
                    value: "Í∞ïÏù∏Ìï¥",
                  },
                  {
                    text: {
                      type: "plain_text",
                      text: "ÍπÄÏû¨Ìò∏",
                      emoji: true,
                    },
                    value: "ÍπÄÏû¨Ìò∏",
                  },
                  {
                    text: {
                      type: "plain_text",
                      text: "Ï†ïÌÉúÌòÑ",
                      emoji: true,
                    },
                    value: "Ï†ïÌÉúÌòÑ",
                  },
                  {
                    text: {
                      type: "plain_text",
                      text: "Ïù¥Ï¢ÖÏõê",
                      emoji: true,
                    },
                    value: "Ïù¥Ï¢ÖÏõê",
                  },
                  {
                    text: {
                      type: "plain_text",
                      text: "Ï°∞Î¨∏Í∑º",
                      emoji: true,
                    },
                    value: "Ï°∞Î¨∏Í∑º",
                  },
                ],
                action_id: "author_select-action",
              },
            },
            {
              type: "section",
              block_id: "developer_select",
              text: {
                type: "mrkdwn",
                text: "Í∞úÎ∞ú Îã¥ÎãπÏûê ÏûëÏÑ±Ïûê",
              },
              accessory: {
                type: "static_select",
                placeholder: {
                  type: "plain_text",
                  text: "ÏÑ†ÌÉùÌïòÍ∏∞",
                  emoji: true,
                },
                options: [
                  {
                    text: {
                      type: "plain_text",
                      text: "Ïù¥Í¥ëÎ†¨",
                      emoji: true,
                    },
                    value: "U066HPC6GAG",
                  },
                  {
                    text: {
                      type: "plain_text",
                      text: "ÍπÄÏû¨Ìò∏",
                      emoji: true,
                    },
                    value: "U042RS7CBU6",
                  },
                  {
                    text: {
                      type: "plain_text",
                      text: "Ï†ïÌÉúÌòÑ",
                      emoji: true,
                    },
                    value: "U05CWRU2K60",
                  },
                ],
                action_id: "developer_select-action",
              },
            },
            // {
            //   type: "section",
            //   block_id: "developer_select",
            //   text: {
            //     type: "mrkdwn",
            //     text: "Í∞úÎ∞ú Îã¥ÎãπÏûê ÏÑ†ÌÉùÌïòÍ∏∞",
            //   },
            //   accessory: {
            //     type: "users_select",
            //     placeholder: {
            //       type: "plain_text",
            //       text: "ÏÑ†ÌÉùÌïòÍ∏∞",
            //       emoji: true,
            //     },
            //     action_id: "users_select-action",
            //   },
            // },
            {
              type: "section",
              block_id: "bug_select",
              text: {
                type: "mrkdwn",
                text: "Î≤ÑÍ∑∏ Ïú†Ìòï",
              },
              accessory: {
                type: "static_select",
                placeholder: {
                  type: "plain_text",
                  text: "ÏÑ†ÌÉùÌïòÍ∏∞",
                  emoji: true,
                },
                options: [
                  {
                    text: {
                      type: "plain_text",
                      text: "ÎîîÏûêÏù∏",
                      emoji: true,
                    },
                    value: "ÎîîÏûêÏù∏",
                  },
                  {
                    text: {
                      type: "plain_text",
                      text: "Í∏∞Îä•",
                      emoji: true,
                    },
                    value: "Í∏∞Îä•",
                  },
                  {
                    text: {
                      type: "plain_text",
                      text: "Í∏∞ÌÉÄ",
                      emoji: true,
                    },
                    value: "Í∏∞ÌÉÄ",
                  },
                ],
                action_id: "bug_select-action",
              },
            },
          ],
          submit: {
            type: "plain_text",
            text: "Submit",
          },
        },
      });
      return res;
    } catch (error) {
      console.error("Ïä¨Îûô Ï∞Ω Ïó¥Í∏∞ Ïã§Ìå®:", error);
    }
  });
  app.command("/check-in", async ({ ack, body, client }) => {
    await ack();
    try {
      const res = await client.views.open({
        trigger_id: body.trigger_id,
        view: {
          type: "modal",
          callback_id: "checkIn",
          private_metadata: body.channel_id,
          title: {
            type: "plain_text",
            text: "Ï∂úÍ∑ºÏûê ÏÑ†ÌÉù",
          },
          blocks: [
            {
              type: "section",
              block_id: "check_in_select",
              text: {
                type: "mrkdwn",
                text: "‚úÖ Ï∂úÍ∑º Ï≤¥ÌÅ¨",
              },
              accessory: {
                type: "static_select",
                placeholder: {
                  type: "plain_text",
                  text: "ÏÑ†ÌÉùÌïòÍ∏∞",
                  emoji: true,
                },
                options: [
                  {
                    text: {
                      type: "plain_text",
                      text: "Î∞ïÍ≤ΩÌò∏",
                      emoji: true,
                    },
                    value: "Î∞ïÍ≤ΩÌò∏",
                  },
                  {
                    text: {
                      type: "plain_text",
                      text: "Ïù¥Í¥ëÎ†¨",
                      emoji: true,
                    },
                    value: "Ïù¥Í¥ëÎ†¨",
                  },
                  {
                    text: {
                      type: "plain_text",
                      text: "Í∞ïÏù∏Ìï¥",
                      emoji: true,
                    },
                    value: "Í∞ïÏù∏Ìï¥",
                  },
                  {
                    text: {
                      type: "plain_text",
                      text: "ÍπÄÏû¨Ìò∏",
                      emoji: true,
                    },
                    value: "ÍπÄÏû¨Ìò∏",
                  },
                  {
                    text: {
                      type: "plain_text",
                      text: "Ï†ïÌÉúÌòÑ",
                      emoji: true,
                    },
                    value: "Ï†ïÌÉúÌòÑ",
                  },
                  {
                    text: {
                      type: "plain_text",
                      text: "ÍπÄÌÉúÏõê",
                      emoji: true,
                    },
                    value: "ÍπÄÌÉúÏõê",
                  },
                  {
                    text: {
                      type: "plain_text",
                      text: "Ïú†Ìù¨Í≤Ω",
                      emoji: true,
                    },
                    value: "Ïú†Ìù¨Í≤Ω",
                  },
                  {
                    text: {
                      type: "plain_text",
                      text: "ÏûÑÏû¨Î¶º",
                      emoji: true,
                    },
                    value: "ÏûÑÏû¨Î¶º",
                  },
                  {
                    text: {
                      type: "plain_text",
                      text: "Ïù¥Ï¢ÖÏõê",
                      emoji: true,
                    },
                    value: "Ïù¥Ï¢ÖÏõê",
                  },
                  {
                    text: {
                      type: "plain_text",
                      text: "Ï°∞Î¨∏Í∑º",
                      emoji: true,
                    },
                    value: "Ï°∞Î¨∏Í∑º",
                  },
                  {
                    text: {
                      type: "plain_text",
                      text: "test",
                      emoji: true,
                    },
                    value: "test",
                  },
                ],
                action_id: "check_in_select-action",
              },
            },
            // ÏÑ†ÌÉùÌï¥ÎèÑ ÎêòÍ≥† ÏïàÌï¥ÎèÑ ÎêòÎäî Î∂ÄÎ∂Ñ
            {
              type: "section",
              block_id: "check_in_timepicker",
              text: {
                type: "mrkdwn",
                text: "‚ö†Ô∏è Ï∂úÍ∑º ÏãúÍ∞Ñ ÏÑ†ÌÉù (ÌòÑÏû¨ ÏãúÍ∞ÑÏù¥ ÏïÑÎãê Í≤ΩÏö∞ ÏûÖÎ†•)",
              },
              accessory: {
                type: "timepicker",
                placeholder: {
                  type: "plain_text",
                  text: "ex) 1550 === 15:50",
                  emoji: true,
                },
                action_id: "check_in_timepicker-action",
              },
            },
            {
              dispatch_action: true,
              type: "input",
              block_id: "header_text_input",
              element: {
                type: "plain_text_input",
                dispatch_action_config: {
                  trigger_actions_on: ["on_character_entered"],
                },
                action_id: "header_text_input-action",
              },
              label: {
                type: "plain_text",
                text: "Ï∂úÍ∑ºÏßÄ",
                emoji: true,
              },
            },
          ],

          submit: {
            type: "plain_text",
            text: "Submit",
          },
        },
      });
      return res;
    } catch (error) {
      console.error("Ïä¨Îûô Ï∞Ω Ïó¥Í∏∞ Ïã§Ìå®:", error);
    }
  });
  app.command("/check-out", async ({ ack, body, client }) => {
    await ack();
    try {
      const res = await client.views.open({
        trigger_id: body.trigger_id,
        view: {
          type: "modal",
          callback_id: "checkOut",
          private_metadata: body.channel_id,
          title: {
            type: "plain_text",
            text: "Ìá¥Í∑ºÏûê ÏÑ†ÌÉù",
          },
          blocks: [
            {
              type: "section",
              block_id: "check_out_select",
              text: {
                type: "mrkdwn",
                text: "‚úÖ Ìá¥Í∑º Ï≤¥ÌÅ¨",
              },
              accessory: {
                type: "static_select",
                placeholder: {
                  type: "plain_text",
                  text: "ÏÑ†ÌÉùÌïòÍ∏∞",
                  emoji: true,
                },
                options: [
                  {
                    text: {
                      type: "plain_text",
                      text: "Î∞ïÍ≤ΩÌò∏",
                      emoji: true,
                    },
                    value: "Î∞ïÍ≤ΩÌò∏",
                  },
                  {
                    text: {
                      type: "plain_text",
                      text: "Ïù¥Í¥ëÎ†¨",
                      emoji: true,
                    },
                    value: "Ïù¥Í¥ëÎ†¨",
                  },
                  {
                    text: {
                      type: "plain_text",
                      text: "Í∞ïÏù∏Ìï¥",
                      emoji: true,
                    },
                    value: "Í∞ïÏù∏Ìï¥",
                  },
                  {
                    text: {
                      type: "plain_text",
                      text: "ÍπÄÏû¨Ìò∏",
                      emoji: true,
                    },
                    value: "ÍπÄÏû¨Ìò∏",
                  },
                  {
                    text: {
                      type: "plain_text",
                      text: "Ï†ïÌÉúÌòÑ",
                      emoji: true,
                    },
                    value: "Ï†ïÌÉúÌòÑ",
                  },
                  {
                    text: {
                      type: "plain_text",
                      text: "ÍπÄÌÉúÏõê",
                      emoji: true,
                    },
                    value: "ÍπÄÌÉúÏõê",
                  },
                  {
                    text: {
                      type: "plain_text",
                      text: "Ïú†Ìù¨Í≤Ω",
                      emoji: true,
                    },
                    value: "Ïú†Ìù¨Í≤Ω",
                  },
                  {
                    text: {
                      type: "plain_text",
                      text: "ÏûÑÏû¨Î¶º",
                      emoji: true,
                    },
                    value: "ÏûÑÏû¨Î¶º",
                  },
                  {
                    text: {
                      type: "plain_text",
                      text: "Ïù¥Ï¢ÖÏõê",
                      emoji: true,
                    },
                    value: "Ïù¥Ï¢ÖÏõê",
                  },
                  {
                    text: {
                      type: "plain_text",
                      text: "Ï°∞Î¨∏Í∑º",
                      emoji: true,
                    },
                    value: "Ï°∞Î¨∏Í∑º",
                  },
                  {
                    text: {
                      type: "plain_text",
                      text: "test",
                      emoji: true,
                    },
                    value: "test",
                  },
                ],
                action_id: "check_out_select-action",
              },
            },
            {
              type: "rich_text",
              elements: [
                {
                  type: "rich_text_section",
                  elements: [
                    {
                      type: "text",
                      text: "‚ö†Ô∏è Ìá¥Í∑º ÏãúÍ∞ÑÏù¥ ÌòÑ ÏãúÍ∞ÑÏù¥ ÏïÑÎãê Í≤ΩÏö∞ ÏûÖÎ†•Ìï¥Ï£ºÏÑ∏Ïöî.",
                    },
                  ],
                },
              ],
            },
            // ÏÑ†ÌÉùÌï¥ÎèÑ ÎêòÍ≥† ÏïàÌï¥ÎèÑ ÎêòÎäî Î∂ÄÎ∂Ñ

            {
              type: "section",
              block_id: "check_in_date_select",
              text: {
                type: "mrkdwn",
                text: "Ï∂úÍ∑º ÎÇ†Ïßú ÏÑ†ÌÉù",
              },
              accessory: {
                type: "datepicker",
                placeholder: {
                  type: "plain_text",
                  text: "Ï∂úÍ∑º ÎÇ†Ïßú ÏÑ†ÌÉù",
                  emoji: true,
                },
                action_id: "check_in_date_select-action",
              },
            },
            {
              type: "section",
              block_id: "check_out_date_select",
              text: {
                type: "mrkdwn",
                text: "Ìá¥Í∑º ÎÇ†Ïßú ÏÑ†ÌÉù",
              },
              accessory: {
                type: "datepicker",
                placeholder: {
                  type: "plain_text",
                  text: "Ìá¥Í∑º ÎÇ†Ïßú ÏÑ†ÌÉù",
                  emoji: true,
                },
                action_id: "check_out_date_select-action",
              },
            },
            {
              type: "section",
              block_id: "check_out_timepicker",
              text: {
                type: "mrkdwn",
                text: "Ìá¥Í∑º ÏãúÍ∞Ñ ÏÑ†ÌÉù",
              },
              accessory: {
                type: "timepicker",
                placeholder: {
                  type: "plain_text",
                  text: "ex) 1550 === 15:50",
                  emoji: true,
                },
                action_id: "check_out_timepicker-action",
              },
            },
          ],
          submit: {
            type: "plain_text",
            text: "Submit",
          },
        },
      });
      return res;
    } catch (error) {
      console.error("Ïä¨Îûô Ï∞Ω Ïó¥Í∏∞ Ïã§Ìå®:", error);
    }
  });
  app.command("/request-attendance-fix", async ({ ack, body, client }) => {
    await ack();
    try {
      const res = await client.views.open({
        trigger_id: body.trigger_id,
        view: {
          type: "modal",
          callback_id: "requestAttendanceFix",
          private_metadata: body.channel_id,
          title: {
            type: "plain_text",
            text: "Í∑ºÌÉú ÏàòÏ†ï Ïã†Ï≤≠",
          },
          blocks: [
            {
              type: "section",
              block_id: "attendance_fix_person_select",
              text: {
                type: "mrkdwn",
                text: "Í∑ºÌÉú ÏàòÏ†ïÏûê ÏÑ†ÌÉù",
              },
              accessory: {
                type: "static_select",
                placeholder: {
                  type: "plain_text",
                  text: "ÏÑ†ÌÉùÌïòÍ∏∞",
                  emoji: true,
                },
                options: [
                  {
                    text: {
                      type: "plain_text",
                      text: "Î∞ïÍ≤ΩÌò∏",
                      emoji: true,
                    },
                    value: "Î∞ïÍ≤ΩÌò∏",
                  },
                  {
                    text: {
                      type: "plain_text",
                      text: "Ïù¥Í¥ëÎ†¨",
                      emoji: true,
                    },
                    value: "Ïù¥Í¥ëÎ†¨",
                  },
                  {
                    text: {
                      type: "plain_text",
                      text: "Í∞ïÏù∏Ìï¥",
                      emoji: true,
                    },
                    value: "Í∞ïÏù∏Ìï¥",
                  },
                  {
                    text: {
                      type: "plain_text",
                      text: "ÍπÄÏû¨Ìò∏",
                      emoji: true,
                    },
                    value: "ÍπÄÏû¨Ìò∏",
                  },
                  {
                    text: {
                      type: "plain_text",
                      text: "Ï†ïÌÉúÌòÑ",
                      emoji: true,
                    },
                    value: "Ï†ïÌÉúÌòÑ",
                  },
                  {
                    text: {
                      type: "plain_text",
                      text: "ÍπÄÌÉúÏõê",
                      emoji: true,
                    },
                    value: "ÍπÄÌÉúÏõê",
                  },
                  {
                    text: {
                      type: "plain_text",
                      text: "Ïú†Ìù¨Í≤Ω",
                      emoji: true,
                    },
                    value: "Ïú†Ìù¨Í≤Ω",
                  },
                  {
                    text: {
                      type: "plain_text",
                      text: "ÏûÑÏû¨Î¶º",
                      emoji: true,
                    },
                    value: "ÏûÑÏû¨Î¶º",
                  },
                  {
                    text: {
                      type: "plain_text",
                      text: "Ïù¥Ï¢ÖÏõê",
                      emoji: true,
                    },
                    value: "Ïù¥Ï¢ÖÏõê",
                  },
                  {
                    text: {
                      type: "plain_text",
                      text: "Ï°∞Î¨∏Í∑º",
                      emoji: true,
                    },
                    value: "Ï°∞Î¨∏Í∑º",
                  },
                  {
                    text: {
                      type: "plain_text",
                      text: "test",
                      emoji: true,
                    },
                    value: "test",
                  },
                ],
                action_id: "attendance_fix_person_select-action",
              },
            },
            {
              type: "section",
              block_id: "attendance_fix_date_select",
              text: {
                type: "mrkdwn",
                text: "Í∑ºÌÉú ÏàòÏ†ï ÎÇ†Ïßú ÏÑ†ÌÉù",
              },
              accessory: {
                type: "datepicker",
                placeholder: {
                  type: "plain_text",
                  text: "ÎÇ†Ïßú ÏÑ†ÌÉù",
                  emoji: true,
                },
                action_id: "attendance_fix_date_select-action",
              },
            },
            // ÏàòÏ†ïÌï† Í∑ºÌÉú ÏÉÅÌÉú ÏÑ†ÌÉù
            {
              type: "section",
              block_id: "attendance_fix_status_select",
              text: {
                type: "mrkdwn",
                text: "ÏàòÏ†ïÌï† Í∑ºÌÉú ÏÉÅÌÉú ÏÑ†ÌÉù",
              },
              accessory: {
                type: "static_select",
                placeholder: {
                  type: "plain_text",
                  text: "ÏÑ†ÌÉùÌïòÍ∏∞",
                  emoji: true,
                },
                options: [
                  {
                    text: {
                      type: "plain_text",
                      text: "Ï∂úÍ∑º",
                      emoji: true,
                    },
                    value: "Ï∂úÍ∑º",
                  },
                  {
                    text: {
                      type: "plain_text",
                      text: "Ìá¥Í∑º",
                      emoji: true,
                    },
                    value: "Ìá¥Í∑º",
                  },
                ],
                action_id: "attendance_fix_status_select-action",
              },
            },
            // ÏàòÏ†ïÌïú Í∑ºÌÉú ÎÇ†Ïßú ÏÑ†ÌÉù
            {
              type: "section",
              block_id: "attendance_fix_time_select",
              text: {
                type: "mrkdwn",
                text: "ÏàòÏ†ïÌïú Í∑ºÌÉú ÏãúÍ∞Ñ ÏÑ†ÌÉù",
              },
              accessory: {
                type: "timepicker",
                placeholder: {
                  type: "plain_text",
                  text: "ÏãúÍ∞Ñ ÏÑ†ÌÉù",
                  emoji: true,
                },
                action_id: "attendance_fix_time_select-action",
              },
            },

            // Í∑ºÌÉú ÏàòÏ†ï ÏÇ¨Ïú† ÏûÖÎ†•
            {
              type: "input",
              block_id: "attendance_fix_reason_input",
              element: {
                type: "plain_text_input",
                multiline: true,
              },
              label: {
                type: "plain_text",
                text: "Í∑ºÌÉú ÏàòÏ†ï ÏÇ¨Ïú†",
              },
            },
          ],
          submit: {
            type: "plain_text",
            text: "Submit",
          },
        },
      });
      return res;
    } catch (error) {
      console.error("Ïä¨Îûô Ï∞Ω Ïó¥Í∏∞ Ïã§Ìå®:", error);
    }
  });

  app.command("/request-vacation", async ({ ack, body, client }) => {
    await ack();
    try {
      const res = await client.views.open({
        trigger_id: body.trigger_id,
        view: {
          type: "modal",
          callback_id: "requestVacation",
          private_metadata: body.channel_id,
          title: {
            type: "plain_text",
            text: "Ìú¥Í∞Ä Ïã†Ï≤≠",
          },
          blocks: [
            {
              type: "section",
              block_id: "vacation_person_select",
              text: {
                type: "mrkdwn",
                text: "Ìú¥Í∞ÄÏûê ÏÑ†ÌÉù",
              },
              accessory: {
                type: "static_select",
                placeholder: {
                  type: "plain_text",
                  text: "ÏÑ†ÌÉùÌïòÍ∏∞",
                  emoji: true,
                },
                options: [
                  {
                    text: {
                      type: "plain_text",
                      text: "Î∞ïÍ≤ΩÌò∏",
                      emoji: true,
                    },
                    value: "Î∞ïÍ≤ΩÌò∏",
                  },
                  {
                    text: {
                      type: "plain_text",
                      text: "Ïù¥Í¥ëÎ†¨",
                      emoji: true,
                    },
                    value: "Ïù¥Í¥ëÎ†¨",
                  },
                  {
                    text: {
                      type: "plain_text",
                      text: "Í∞ïÏù∏Ìï¥",
                      emoji: true,
                    },
                    value: "Í∞ïÏù∏Ìï¥",
                  },
                  {
                    text: {
                      type: "plain_text",
                      text: "ÍπÄÏû¨Ìò∏",
                      emoji: true,
                    },
                    value: "ÍπÄÏû¨Ìò∏",
                  },
                  {
                    text: {
                      type: "plain_text",
                      text: "Ï†ïÌÉúÌòÑ",
                      emoji: true,
                    },
                    value: "Ï†ïÌÉúÌòÑ",
                  },
                  {
                    text: {
                      type: "plain_text",
                      text: "ÍπÄÌÉúÏõê",
                      emoji: true,
                    },
                    value: "ÍπÄÌÉúÏõê",
                  },
                  {
                    text: {
                      type: "plain_text",
                      text: "Ïú†Ìù¨Í≤Ω",
                      emoji: true,
                    },
                    value: "Ïú†Ìù¨Í≤Ω",
                  },
                  {
                    text: {
                      type: "plain_text",
                      text: "ÏûÑÏû¨Î¶º",
                      emoji: true,
                    },
                    value: "ÏûÑÏû¨Î¶º",
                  },
                  {
                    text: {
                      type: "plain_text",
                      text: "Ïù¥Ï¢ÖÏõê",
                      emoji: true,
                    },
                    value: "Ïù¥Ï¢ÖÏõê",
                  },
                  {
                    text: {
                      type: "plain_text",
                      text: "Ï°∞Î¨∏Í∑º",
                      emoji: true,
                    },
                    value: "Ï°∞Î¨∏Í∑º",
                  },
                ],
                action_id: "vacation_person_select-action",
              },
            },
            {
              type: "section",
              block_id: "request_vacation_select-start",
              text: {
                type: "mrkdwn",
                text: "Ìú¥Í∞Ä ÏãúÏûë ÎÇ†Ïßú ÏÑ†ÌÉù",
              },
              accessory: {
                type: "datepicker",
                placeholder: {
                  type: "plain_text",
                  text: "ÏãúÏûë ÎÇ† ÏÑ†ÌÉù",
                  emoji: true,
                },
                action_id: "request_vacation_select-action",
              },
            },
            {
              type: "section",
              block_id: "request_vacation_select-end",
              text: {
                type: "mrkdwn",
                text: "Ìú¥Í∞Ä ÎßàÏßÄÎßâ ÎÇ†Ïßú ÏÑ†ÌÉù",
              },
              accessory: {
                type: "datepicker",
                placeholder: {
                  type: "plain_text",
                  text: "ÎßàÏßÄÎßâ ÎÇ† ÏÑ†ÌÉù",
                  emoji: true,
                },
                action_id: "request_vacation_select-action",
              },
            },
          ],
          submit: {
            type: "plain_text",
            text: "Submit",
          },
        },
      });
      return res;
    } catch (error) {
      console.error("Ïä¨Îûô Ï∞Ω Ïó¥Í∏∞ Ïã§Ìå®:", error);
    }
  });
}
module.exports = { setupSlackCommands };
